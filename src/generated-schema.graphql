# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AffectedRowsOutput {
  count: Int!
}

type AggregateAssinature_email {
  _count: Assinature_emailCountAggregate
  _max: Assinature_emailMaxAggregate
  _min: Assinature_emailMinAggregate
}

type Assinature_email {
  alreadyupdated: Boolean!
  created_at: DateTime!
  email: String!
  id: String!
  name: String!
  password: String!
  updated_at: DateTime!
}

type Assinature_emailCountAggregate {
  _all: Int!
  alreadyupdated: Int!
  created_at: Int!
  email: Int!
  id: Int!
  name: Int!
  password: Int!
  updated_at: Int!
}

input Assinature_emailCountOrderByAggregateInput {
  alreadyupdated: SortOrder
  created_at: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  password: SortOrder
  updated_at: SortOrder
}

input Assinature_emailCreateInput {
  alreadyupdated: Boolean
  created_at: DateTime
  email: String!
  id: String
  name: String!
  password: String!
  updated_at: DateTime
}

input Assinature_emailCreateManyInput {
  alreadyupdated: Boolean
  created_at: DateTime
  email: String!
  id: String
  name: String!
  password: String!
  updated_at: DateTime
}

type Assinature_emailGroupBy {
  _count: Assinature_emailCountAggregate
  _max: Assinature_emailMaxAggregate
  _min: Assinature_emailMinAggregate
  alreadyupdated: Boolean!
  created_at: DateTime!
  email: String!
  id: String!
  name: String!
  password: String!
  updated_at: DateTime!
}

type Assinature_emailMaxAggregate {
  alreadyupdated: Boolean
  created_at: DateTime
  email: String
  id: String
  name: String
  password: String
  updated_at: DateTime
}

input Assinature_emailMaxOrderByAggregateInput {
  alreadyupdated: SortOrder
  created_at: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  password: SortOrder
  updated_at: SortOrder
}

type Assinature_emailMinAggregate {
  alreadyupdated: Boolean
  created_at: DateTime
  email: String
  id: String
  name: String
  password: String
  updated_at: DateTime
}

input Assinature_emailMinOrderByAggregateInput {
  alreadyupdated: SortOrder
  created_at: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  password: SortOrder
  updated_at: SortOrder
}

input Assinature_emailOrderByWithAggregationInput {
  _count: Assinature_emailCountOrderByAggregateInput
  _max: Assinature_emailMaxOrderByAggregateInput
  _min: Assinature_emailMinOrderByAggregateInput
  alreadyupdated: SortOrder
  created_at: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  password: SortOrder
  updated_at: SortOrder
}

input Assinature_emailOrderByWithRelationInput {
  alreadyupdated: SortOrder
  created_at: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  password: SortOrder
  updated_at: SortOrder
}

enum Assinature_emailScalarFieldEnum {
  alreadyupdated
  created_at
  email
  id
  name
  password
  updated_at
}

input Assinature_emailScalarWhereWithAggregatesInput {
  alreadyupdated: BoolWithAggregatesFilter
  AND: [Assinature_emailScalarWhereWithAggregatesInput!]
  created_at: DateTimeWithAggregatesFilter
  email: StringWithAggregatesFilter
  id: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
  NOT: [Assinature_emailScalarWhereWithAggregatesInput!]
  OR: [Assinature_emailScalarWhereWithAggregatesInput!]
  password: StringWithAggregatesFilter
  updated_at: DateTimeWithAggregatesFilter
}

input Assinature_emailUpdateInput {
  alreadyupdated: BoolFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input Assinature_emailUpdateManyMutationInput {
  alreadyupdated: BoolFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input Assinature_emailWhereInput {
  alreadyupdated: BoolFilter
  AND: [Assinature_emailWhereInput!]
  created_at: DateTimeFilter
  email: StringFilter
  id: StringFilter
  name: StringFilter
  NOT: [Assinature_emailWhereInput!]
  OR: [Assinature_emailWhereInput!]
  password: StringFilter
  updated_at: DateTimeFilter
}

input Assinature_emailWhereUniqueInput {
  id: String
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime!]
}

type Mutation {
  createManyAssinature_email(data: [Assinature_emailCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createOneAssinature_email(data: Assinature_emailCreateInput!): Assinature_email!
  deleteManyAssinature_email(where: Assinature_emailWhereInput): AffectedRowsOutput!
  deleteOneAssinature_email(where: Assinature_emailWhereUniqueInput!): Assinature_email
  updateManyAssinature_email(data: Assinature_emailUpdateManyMutationInput!, where: Assinature_emailWhereInput): AffectedRowsOutput!
  updateOneAssinature_email(data: Assinature_emailUpdateInput!, where: Assinature_emailWhereUniqueInput!): Assinature_email
  upsertOneAssinature_email(create: Assinature_emailCreateInput!, update: Assinature_emailUpdateInput!, where: Assinature_emailWhereUniqueInput!): Assinature_email!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

type Query {
  aggregateAssinature_email(cursor: Assinature_emailWhereUniqueInput, orderBy: [Assinature_emailOrderByWithRelationInput!], skip: Int, take: Int, where: Assinature_emailWhereInput): AggregateAssinature_email!
  assinature_email(where: Assinature_emailWhereUniqueInput!): Assinature_email
  assinature_emails(cursor: Assinature_emailWhereUniqueInput, distinct: [Assinature_emailScalarFieldEnum!], orderBy: [Assinature_emailOrderByWithRelationInput!], skip: Int, take: Int, where: Assinature_emailWhereInput): [Assinature_email!]!
  findFirstAssinature_email(cursor: Assinature_emailWhereUniqueInput, distinct: [Assinature_emailScalarFieldEnum!], orderBy: [Assinature_emailOrderByWithRelationInput!], skip: Int, take: Int, where: Assinature_emailWhereInput): Assinature_email
  groupByAssinature_email(by: [Assinature_emailScalarFieldEnum!]!, having: Assinature_emailScalarWhereWithAggregatesInput, orderBy: [Assinature_emailOrderByWithAggregationInput!], skip: Int, take: Int, where: Assinature_emailWhereInput): [Assinature_emailGroupBy!]!
}

enum QueryMode {
  default
  insensitive
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}
